
single_hit
# (move_duration=1.00;distancelimit=0.00;linewidth=0.00;actorside=enemy)
{
# shot skill-be
	statecount=1
	state[0].id=move
	state[0].duration.values=1.00,0
	state[0].tagparams=state_duration:move_duration

	movercount=1
	mover[0].type=shot
	mover[0].stateids=move
	mover[0].collisionflags=actors,obstacles,terrain,cover,terrain_model
	mover[0].hittargetstgindex=0
	mover[0].tagparams=shot_distance_limit:distancelimit,shot_line_width:linewidth,shot_actor_side:actorside

	targetgroupcount=1
	targetgroup[0].stateids=move
	targetgroup[0].targettype=hit_targets
	targetgroup[0].cleanuptargets=1
}

piercing
# (move_duration=1.00;distancelimit=0.00;linewidth=0.00;actorside=enemy;fixtargetheight=0.00)
{
# shot skill-be
	maxpiercingcount.values=-1.00,0

	statecount=1
	state[0].id=move
	state[0].duration.values=1.00,0
	state[0].tagparams=state_duration:move_duration

	movercount=1
	mover[0].type=shot
	mover[0].stateids=move
	mover[0].collisionflags=actors,obstacles,terrain,cover,terrain_model
	mover[0].hittargetstgindex=0
	mover[0].tagparams=shot_distance_limit:distancelimit,shot_line_width:linewidth,shot_actor_side:actorside,fix_target_height:fixtargetheight

	targetgroupcount=1
	targetgroup[0].stateids=move
	targetgroup[0].targettype=hit_targets
	targetgroup[0].cleanuptargets=1
}

contact
{
# shot skill-be
	statecount=1
	state[0].id=move
	state[0].duration.values=4.00,0

	movercount=1
	mover[0].type=grenade
	mover[0].stateids=move
	mover[0].collisionflags=actors,obstacles,terrain,cover,terrain_model
	mover[0].hittargetstgindex=0
	mover[0].throwangle.values=40.00,0
	mover[0].throwangle.boosts=throw_angle(1.00)

	targetgroupcount=1
	targetgroup[0].stateids=move
	targetgroup[0].targettype=hit_targets
	targetgroup[0].cleanuptargets=1
}

aimed
#{
# csak modosito feltetelben hasznaljuk
#}

grenade
# (animtype=throw;preaim_duration=0.3;aim_animtime=1.0;skill=__grenade__shot)
{
# minta
#	activationtype=on_off

	casttarget.castrangemin.values=5.0,0
	casttarget.castrangeusageflags=clamp_in_command

	statecount=4
	state[0].id=preaim
	state[0].animinfo.animtype=throw
	state[0].animinfo.toevent=loop_begin
	state[0].animinfo.endstateevent=state_end
	state[0].flags=block_stopping,update_cast_target_from_command
	state[0].tagparams=anim_type:animtype,state_duration:preaim_duration,anim_time:preaim_duration

	state[1].id=aim
	state[1].duration.values=-1.0,0
	state[1].animinfo.animtype=throw
	state[1].animinfo.fromevent=loop_begin
	state[1].animinfo.toevent=loop_end
	state[1].animinfo.animtime.values=1.0,0
	state[1].animinfo.looping=1
	state[1].flags=enable_command_refresh_in_execute_state,update_cast_target_from_command
	state[1].tagparams=anim_type:animtype,anim_time:aim_animtime

	state[2].id=cast
	state[2].animinfo.animtype=throw
	state[2].animinfo.fromevent=loop_end
	state[2].animinfo.endstateevent=cast
	state[2].animinfo.unlockcommandevent=unlock_command
	state[2].flags=block_stopping
	state[2].tagparams=anim_type:animtype

	state[3].id=default

# TODO: ezt is hasznalni parameterekkel
# (linkto=socket_pistol_end)
#	movercount=2
#	mover[0].type=snap_to_location
#	mover[0].linktarget=caster
#	mover[0].location.linktype=socket
#	mover[0].location.linkto=socket_pistol_end
#	mover[0].location.orientaxisdir=negative_y
#	mover[0].continuouslink=1
#	
#	mover[1].type=cast_position
#	mover[1].stateids=aim
#	mover[1].continuouslink=1
#	mover[1].applyrangelimits=1

	actioncount=3
	action[0].type=throwing_boost
	action[0].stateids=aim
	action[0].boostid=throw_angle
	action[0].boostlimit.values=45.0,0
	action[0].chargepersec.values=10.0,0
	action[0].boosttype=charge
	action[0].boostlimitmin.values=30.0,0

	action[1].type=throwing_visualizer
	action[1].stateids=preaim,aim
	action[1].throwangle.values=15.0,0
	action[1].throwangle.boosts=throw_angle(1.0)
	action[1].linewidth=3.6
	action[1].color=0xff0177ff
	action[1].looptime=1500

	action[2].type=create_shot
	action[2].stateids=default
	action[2].targettype=magic
	action[2].skill=__grenade__shot
	action[2].tagparams=create_shot_skill:skill
}

materialize
#{
# minta
#	casttarget.casttargets=area
#}

self
#{
# minta
#	casttarget.casttargets=caster
#}

aura_small
{
	areacount=1
	area[0].type=circle
	area[0].radius.values=3.0,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=aura

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=aura
	targetgroup[0].targetside=enemy
}

aura
{
	areacount=1
	area[0].type=circle
	area[0].radius.values=5.00,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=aura

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=aura
	targetgroup[0].targetside=enemy
}

aura_large
{
	areacount=1
	area[0].type=circle
	area[0].radius.values=10.00,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=aura_large

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=aura_large
	targetgroup[0].targetside=enemy
}

whirling_attack
{
	areacount=1
	area[0].type=circle
	area[0].radius.values=5.0,0
	area[0].targettype=caster
	area[0].id=whirling_attack

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=whirling_attack
	targetgroup[0].targetside=enemy
}

cone_wide
{
	areacount=1
	area[0].type=arc
	area[0].radius.values=5.0,0
	area[0].angle.values=160.0,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=cone_wide_area

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=cone_wide_area
	targetgroup[0].targetside=enemy
}

cone
{
	areacount=1
	area[0].type=arc
	area[0].radius.values=10.0,0
	area[0].angle.values=45.0,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=cone_area

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=cone_area
	targetgroup[0].targetside=enemy
}

cone_tight
{
	areacount=1
	area[0].type=arc
	area[0].radius.values=3.0,0
	area[0].angle.values=60.0,0
	area[0].useareaextentbonus=1
	area[0].targettype=caster
	area[0].id=cone_tight_area

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=cone_tight_area
	targetgroup[0].targetside=enemy
}

line
# (distancelimit=10.00;actorside=enemy;linewidth=2.00)
{
# shot skill-be
	maxpiercingcount.values=-1.00,0

	statecount=1
	state[0].id=move
	state[0].duration.values=5.00,0

	movercount=1
	mover[0].type=shot
	mover[0].stateids=move
	mover[0].snaptoground=1
	mover[0].distancelimit=10.00
	mover[0].linewidth=2.00
	mover[0].collisionflags=actors,cover
	mover[0].hittargetstgindex=0
	mover[0].tagparams=shot_distance_limit:distancelimit,shot_actor_side:actorside,shot_line_width:linewidth

	targetgroupcount=1
	targetgroup[0].stateids=move
	targetgroup[0].targettype=hit_targets
	targetgroup[0].cleanuptargets=1
}

area_effect
# aoe
# (radius=3.0,areatargettype=none)
{
	statecount=1
	state[0].id=default

	areacount=1
	area[0].type=circle
	area[0].radius.values=3.00,0
	area[0].useareaextentbonus=1
	area[0].id=area_effect_area
	area[0].tagparams=circle_radius:radius,area_target_type:areatargettype

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=area_effect_area
	targetgroup[0].targetside=enemy
}

area_effect_small
# aoe_small
# (radius=2.0,areatargettype=none)
{
	statecount=1
	state[0].id=default

	areacount=1
	area[0].type=circle
	area[0].radius.values=2.0,0
	area[0].useareaextentbonus=1
	area[0].id=area_effect_area
	area[0].tagparams=circle_radius:radius,area_target_type:areatargettype

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=area_effect_area
	targetgroup[0].targetside=enemy
}

area_effect_large
# aoe_large
# (radius=6.00;areatargettype=none)
{
	statecount=1
	state[0].id=default

	areacount=1
	area[0].type=circle
	area[0].radius.values=6.00,0
	area[0].useareaextentbonus=1
	area[0].id=area_effect_area
	area[0].tagparams=circle_radius:radius,area_target_type:areatargettype

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].areaid=area_effect_area
	targetgroup[0].targetside=enemy
}

chain
#{
# minta
#	action[ ].type=chain_shot
#	action[ ].castchainmax.values=4,0
#}

rapid_fire
#{
# csak modosito feltetelben hasznaljuk
#}

concentration
# (animtype=rapid_fire)
{
# minta
#	activationtype=on_off

	statecount=2
	state[0].id=cast
	state[0].duration.values=3.0,0
	state[0].animinfo.animtype=rapid_fire
	state[0].animinfo.animtime.values=3.0,0
	state[0].animinfo.looping=1
	state[0].timelimitreachedboostid=cast_done
	state[0].tagparams=anim_type:animtype

	state[1].id=default
	state[1].conditioncount=1
	state[1].condition[0].type=needs_boost_value
	state[1].condition[0].hashparam=cast_done
}

slow_projectile
{
# shot skill-be
	movementspeed.values=10.0,0
}

channeled
{
	actioncount=1
	action[0].type=set_flag
	action[0].stateids=default
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=caster
	action[0].soldierflag=salvo
}

compressed_shot
#{
# csak modosito feltetelben hasznaljuk
#}

mine
#{
# csak kiiras miatt kell, nem csinal semmit
#}

bounce
{
# shot skill-be
	maxbouncecount.values=3.0,0

	statecount=1
	state[0].id=move
	state[0].duration.values=5.0,0

	movercount=1
	mover[0].type=grenade
	mover[0].stateids=move
	mover[0].distancelimit=-1.0
	mover[0].collisionflags=actors,obstacles,terrain,cover,terrain_model
	mover[0].hittargetstgindex=0
	mover[0].throwangle.values=15.0,0
	mover[0].throwangle.boosts=throw_angle(1.0)
	mover[0].bounciness=0.7

	targetgroupcount=1
	targetgroup[0].stateids=move
	targetgroup[0].targettype=hit_targets
	targetgroup[0].cleanuptargets=1
}

salvo
{
	actioncount=1
	action[0].type=set_flag
	action[0].stateids=default
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=caster
	action[0].soldierflag=salvo
}

barrage
{
# a damage action-ben kell legyen 'barrage(*1.00)' boost
	actioncount=1
	action[0].type=boost
	action[0].stateids=default
	action[0].boostid=barrage
	action[0].chargepersec.values=0.40,0
	action[0].chargetimelimit.values=3.00,0
	action[0].boosttype=charge
}

melee_range
{
	casttarget.castrange.values=1.50,0
}

medium_range
{
	casttarget.castrange.values=9.00,0
}

long_range
{
	casttarget.castrange.values=20.00,0
}

very_long_range
{
	casttarget.castrange.values=25.00,0
}

block
{
	actioncount=1
	action[0].type=create_magic
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=caster
	action[0].skill=buff__block
	action[0].eothandling=old_reset_time
}

armor_breaking
{
# meglevo 'armor_reduce' boost-ot allit be
	armorreduce_boost=armor_reduce(50)
}

armor_piercing
{
# meglevo 'armor_reduce' boost-ot allit be
	armorreduce_boost=armor_reduce(100)
}

assault
{
# meglevo 'close_range_bonus' boost-ot allit be
	closerangebonus_boost=close_range_bonus(30)
}

shred
{
# meglevo 'damage_loss_per_meter' boost-ot allit be
	damagelosspermeter_boost=damage_loss_per_meter(5)
}

combo
{
# meglevo 'combo' boost-ot allit be
	damage_boost=combo(*5.00)
}

fleshbane
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=magic
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=per_target_damage_bonus
	action[0].mod.values=0.30,0
	action[0].mod.conditions=armored(!),has_shield(!)
}

instant
#{
# csak modosito feltetelben hasznaljuk
#}

persistent
{
# meglevo 'default' state-hez duration-t allit be
	state.id=default
	state.duration.values=5.0,0
}

shield_piercing
{
# meglevo 'shieldbreaking' boost-ot allit be
	shieldbreaking_boost=shieldbreaking(-1)
}

shieldbreaker
{
# meglevo 'shieldbreaking' boost-ot allit be
	shieldbreaking_boost=shieldbreaking(100)
}

knockback
# (targetgroupindex=0;orienttype=magic_to_target)
{
	actioncount=1
	action[0].type=knockback
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:knockback_boostcondition,orient_type:orienttype
}

knockdown
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=knockdown
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(2)
	action[0].force.values=15.00,0
	action[0].skill=debuff__knockdown
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:knockdown_boostcondition
}

stun
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(2)
	action[0].skill=debuff__stun
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:stun_boostcondition
}

pain
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(2)
	action[0].skill=debuff__pain
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=1,0
	action[0].tagparams=target_group_index:targetgroupindex
}

shock
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].skill=debuff__shock
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:shock_boostcondition
}

hallucination
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].skill=debuff__hallucination
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex
}

slow
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].skill=debuff__slow
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:slow_boostcondition
}

freeze
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__freeze
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex
}

vulnerability_physical
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__vulnerability_physical
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:vulnerability_boostcondition
}

vulnerability_heat
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__vulnerability_heat
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:vulnerability_boostcondition
}

vulnerability_warp
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__vulnerability_warp
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:vulnerability_boostcondition
}

resist_physical
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=buff__resist_physical
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex
}

resist_heat
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=buff__resist_heat
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex
}

resist_warp
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=buff__resist_warp
	action[0].pertargetcount.values=1,2,3,0
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex
}

flee
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__flee
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex
}

blind
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].skill=debuff__blind
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:blind_boostcondition
}

restrain
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=debuff__restrain
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex
}

temporary_cellrot
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].pertargetconditions=suppression_level(>=1)
	action[0].skill=debuff__temporary_cellrot
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex
}

buff
#{
# csak modosito feltetelben hasznaljuk
#}

debuff
#{
# csak modosito feltetelben hasznaljuk
#}

better_critical
{
# meglevo 'better_critical' boost-ot allit be
	bettercritical_boost=better_critical(0.10)
}

continous_damage
#{
# minta
#	action[ ].type=damage
#	action[ ].timer.period.values=0.25,0
#}

spread_tight
#{
# minta
#	action[ ].type=shoot
#	action[ ].spreadangle.values=4.0,0
#}

spread
#{
# minta
#	action[ ].type=shoot
#	action[ ].spreadangle.values=8.0,0
#}

spread_wide
#{
# minta
#	action[ ].type=shoot
#	action[ ].spreadangle.values=12.0,0
#}

single_strike
# (arcradius=3.00)
{
	areacount=1
	area[0].type=arc
	area[0].radius.values=5.00,0
	area[0].angle.values=120.00,0
	area[0].targettype=caster
	area[0].usetargetradius=1
	area[0].id=strike_area
	area[0].tagparams=circle_radius:arcradius

	targetgroupcount=1
	targetgroup[0].stateids=default
	targetgroup[0].targettype=cast_target

	targetfiltercount=1
	targetfilter[0].stateids=default
	targetfilter[0].filter=must_be_inside_area
	targetfilter[0].params=strike_area
}

weak_vs_armored
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=magic
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=per_target_damage_bonus
	action[0].mod.values=-0.30,0
	action[0].mod.conditions=armored
}

strong_vs_armored
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=magic
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=per_target_damage_bonus
	action[0].mod.values=0.30,0
	action[0].mod.conditions=armored
}

giantkiller
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=magic
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=per_target_damage_bonus
	action[0].mod.values=0.50,0
	action[0].mod.conditions=giant
}

high_suppression
{
# meglevo 'suppression_multiplier' boost-ot allit be
	suppressionmultiplier_boost=suppression_multiplier(2)
}

extreme_suppression
{
# meglevo 'suppression_multiplier' boost-ot allit be
	suppressionmultiplier_boost=suppression_multiplier(5)
}

breacher
#{
# csak kiiras miatt kell, nem csinal semmit
#}

demolisher
#{
# csak kiiras miatt kell, nem csinal semmit
#}

spinupdamage
#{
# csak kiiras miatt kell, nem csinal semmit
#}

charge
#{
# csak kiiras miatt kell, nem csinal semmit
#}

death_mark
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=Death_mark
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex
}

single_target
#{
#}

death_cult_combo
#{
#}

lightning_combo
#{
#}

blessing
#{
#}

needler_toxin
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=Needler_toxin
	action[0].eothandling=stackable_by_skill
	action[0].stackmax.values=10,0
	action[0].tagparams=target_group_index:targetgroupindex
}

blast
{
# a damage action-ben kell legyen 'blast(*3.00)' boost
	actioncount=1
	action[0].type=boost
	action[0].stateids=default
	action[0].boostid=blast
	action[0].boost.values=1.0,0
	action[0].boosttype=blast
}

traumatize
{
	actioncount=1
	action[0].type=set_flag
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=cast_target
	action[0].soldierflag=hold
}

surprise
{
	actioncount=2
	action[0].type=set_flag
	action[0].stateids=default
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=caster
	action[0].soldierflag=ambushing

	action[1].type=create_magic
	action[1].stateids=default
	action[1].timer.maxrefreshcount.values=1,0
	action[1].targettype=caster
	action[1].skill=Surprise
	action[1].optionalboostid=surprise_duration
	action[1].optionalboosttype=current_state_duration
	action[1].eothandling=only_one
}

anti_psyker
# (targetgroupindex=0)
{
	actioncount=2
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targettype=magic
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=per_target_damage_bonus
	action[0].mod.values=1.00,0
	action[0].mod.conditions=origin(psyker)

	action[1].type=create_magic
	action[1].targetgroupindex=0
	action[1].pertargetconditions=origin(psyker)
	action[1].skill=debuff__restrain
	action[1].eothandling=old_stop
	action[1].tagparams=target_group_index:targetgroupindex
}

dot_burn
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=dot__Burn
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:burn_boostcondition
}

dot_poison
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=dot__Poison
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:poison_boostcondition
}

dot_bleed
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=dot__Bleed
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:bleed_boostcondition
}

dot_warp_bleed
# (targetgroupindex=0)
{
	actioncount=1
	action[0].type=create_magic
	action[0].targetgroupindex=0
	action[0].skill=dot__Warp_bleed
	action[0].eothandling=old_stop
	action[0].tagparams=target_group_index:targetgroupindex,boost_condition:warp_bleed_boostcondition
}

#########################################
# innentol technikai tag-ek vannak, nem irhatjuk ki a jatekban
#

dot
{
	duration.values=5.0,0

# meglevo 'dot' es 'dot_suppression' boost-ot allit be
	dot_boosts=dot(0.20;0.30;0.40),dot_suppression(0.20)
}

dot_long
{
	duration.values=10.0,0

# meglevo 'dot' es 'dot_suppression' boost-ot allit be
	dot_boosts=dot(0.20;0.30;0.40),dot_suppression(0.20)
}

strike_stripe
{
	targetgroupcount=1
	targetgroup[0].stateids=cast
	targetgroup[0].animevent=strike
	targetgroup[0].targettype=caster
	targetgroup[0].cleanuptargets=1
}

rune_knit_flesh
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targetgroupindex=0
	action[0].mod.prioritygroup=base_fix
	action[0].mod.property=hp_regeneration
	action[0].mod.boosts=Rune_Knit_flesh(10.00)
}

rune_regain_composure
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targetgroupindex=0
	action[0].mod.prioritygroup=base_fix
	action[0].mod.property=suppression_regeneration
	action[0].mod.boosts=Rune_Regain_composure(10.00)
}

rune_deny_the_warp
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targetgroupindex=0
	action[0].mod.prioritygroup=bonus_fix
	action[0].mod.property=warp_resist
	action[0].mod.boosts=Rune_Deny_the_warp(10.00)
}

rune_speed_boost
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targetgroupindex=0
	action[0].mod.prioritygroup=bonus_multiplier
	action[0].mod.property=movement_speed
	action[0].mod.boosts=Rune_Speed_boost(0.10)
}

rune_damage_boost
{
	actioncount=1
	action[0].type=modifier
	action[0].timer.maxrefreshcount.values=1,0
	action[0].targetgroupindex=0
	action[0].mod.prioritygroup=bonus_multiplier
	action[0].mod.property=damage
	action[0].mod.boosts=Rune_Damage_boost(0.10)
}
